<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Egate_Payroll.Styles"
                    xmlns:xceed="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit">
    <Thickness x:Key="TabItem.Main.Padding">10,6,10,6</Thickness>
    <Thickness x:Key="TabItem.Sub.Padding">30,6,10,6</Thickness>
    <Thickness x:Key="Page.Main.Margin">8</Thickness>
    <Thickness x:Key="Filters.GroupBox.Margin">6</Thickness>
    <Thickness x:Key="Filters.Fields.Margin">0,0,10,0</Thickness>
    <Thickness x:Key="Filters.Vertical.Margin">0,8,0,0</Thickness>
    <Thickness x:Key="ButtonGroups.Regular.Margin">10,0,0,0</Thickness>
    <Thickness x:Key="ButtonGroups.Clear.Margin">25,0,0,0</Thickness>
    <Thickness x:Key="EditBracket.Group.Margin">4,10,4,10</Thickness>
    <Thickness x:Key="EditBracket.Fields.Margin">12,0,12,0</Thickness>
    <Thickness x:Key="EditBracket.Verticals.Margin">0,5,0,8</Thickness>
    
    <SolidColorBrush x:Key="Cutoff.Select.Background" Color="Purple"/>

    <SolidColorBrush x:Key="RegularTime.Background" Color="#e1e27a"/>
    <SolidColorBrush x:Key="HolidayTime.Background" Color="#7ac5ca"/>
    <SolidColorBrush x:Key="FinalTime.Background" Color="#ff9452"/>
    <SolidColorBrush x:Key="FinalRH.Foreground" Color="Green"/>
    <SolidColorBrush x:Key="FinalOT.Foreground" Color="#ed880c"/>
    <SolidColorBrush x:Key="HolidayHours.Foreground" Color="#1b4763"/>
    <SolidColorBrush x:Key="HourlyRate.Foreground" Color="black"/>
    <SolidColorBrush x:Key="TotalTime.Foreground" Color="DarkOrange"/>
    <SolidColorBrush x:Key="GrossIncome.Foreground" Color="DarkGreen"/>

    <SolidColorBrush x:Key="SSS.Background" Color="#0e4a79"/>
    <SolidColorBrush x:Key="PhilHealth.Background" Color="#04794e"/>
    <SolidColorBrush x:Key="Pagibig.Background" Color="#28156d"/>
    <SolidColorBrush x:Key="BIR.Background" Color="#f9a602"/>

    <LinearGradientBrush x:Key="TabItem.Sub.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#dedede" Offset="0.0"/>
        <GradientStop Color="#c4c4c4" Offset="1.0"/>
    </LinearGradientBrush>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="6,2,6,2"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="Padding" Value="6,2,6,2"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style x:Key="BorderlessButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style x:Key="LinkButton" TargetType="Button" BasedOn="{StaticResource ResourceKey={x:Type Button}}">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter Content="{TemplateBinding Content}"  ContentTemplate="{TemplateBinding  ContentTemplate}" VerticalAlignment="Center">
                        <ContentPresenter.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextDecorations" Value="Underline"/>
                            </Style>
                        </ContentPresenter.Resources>
                    </ContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="Blue" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RightCheckBox" TargetType="CheckBox" BasedOn="{StaticResource ResourceKey={x:Type CheckBox}}">
        <Setter Property="FlowDirection" Value="RightToLeft"/>
        <Style.Resources>
            <Style TargetType="{x:Type Path}">
                <Setter Property="FlowDirection" Value="LeftToRight"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type xceed:DateTimePicker}">
        <Setter Property="ShowButtonSpinner" Value="False"/>
        <Setter Property="TimePickerVisibility" Value="Collapsed"/>
        <Setter Property="Format" Value="Custom"/>
        <Setter Property="FormatString" Value="MM/dd/yyyy"/>
        <Setter Property="AutoCloseCalendar" Value="True"/>
        <Setter Property="MinHeight" Value="21"/>
    </Style>

    <Style TargetType="{x:Type xceed:DecimalUpDown}">
        <Setter Property="ShowButtonSpinner" Value="False"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="FormatString" Value="N2"/>
        <Setter Property="MinHeight" Value="21"/>
    </Style>

    <Style TargetType="{x:Type xceed:IntegerUpDown}">
        <Setter Property="ShowButtonSpinner" Value="False"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="FormatString" Value="N0"/>
        <Setter Property="MinHeight" Value="21"/>
    </Style>

    <Style x:Key="DisabledComboBox" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Background" Value="WhiteSmoke"/>
        <Setter Property="IsEditable" Value="True"/>
    </Style>

    <Style x:Key="DisabledDateTimePicker" TargetType="{x:Type xceed:DateTimePicker}" BasedOn="{StaticResource {x:Type xceed:DateTimePicker}}">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Background" Value="WhiteSmoke"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style x:Key="DisabledDecimalUpDown" TargetType="{x:Type xceed:DecimalUpDown}" BasedOn="{StaticResource {x:Type xceed:DecimalUpDown}}">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Background" Value="WhiteSmoke"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style x:Key="DisabledIntegerUpDown" TargetType="{x:Type xceed:IntegerUpDown}" BasedOn="{StaticResource {x:Type xceed:IntegerUpDown}}">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Background" Value="WhiteSmoke"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>
</ResourceDictionary>