<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Egate_Payroll.Styles"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <SolidColorBrush x:Key="DataGrid.Selected.Background" Color="#e8f7ff"/>
    <SolidColorBrush x:Key="DataGrid.Selected.Foreground" Color="Black"/>
    <SolidColorBrush x:Key="DataGrid.AlternationIndex" Color="WhiteSmoke"/>
    <Thickness x:Key="DataGridTextCell.Margin">5,3,5,3</Thickness>
    <system:Double x:Key="DataGridColumnHeader.FontSize">11</system:Double>

    <Style x:Key="DataGridRow.Style.Default" TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
        <Style.Triggers>
            <Trigger Property="AlternationIndex" Value="0">
                <Setter Property="Background" Value="White" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1">
                <Setter Property="Background" Value="{StaticResource DataGrid.AlternationIndex}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource DataGrid.Selected.Background}"/>
                <Setter Property="Foreground" Value="{StaticResource DataGrid.Selected.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCell.Style.Default" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource DataGrid.Selected.Background}"/>
                <Setter Property="Foreground" Value="{StaticResource DataGrid.Selected.Foreground}"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCell.Style.ShowOnHover" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DataGridCell.Style.Default}">
        <Setter Property="Visibility" Value="Hidden"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},Path=IsMouseOver}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCell.GridStyle.ShowOnHover" TargetType="{x:Type Grid}">
        <Setter Property="Visibility" Value="Hidden"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},Path=IsMouseOver}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="DataGridTextColumn.ElementStyle.Left" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="{StaticResource DataGridTextCell.Margin}"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="DataGridTextColumn.ElementStyle.Right" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DataGridTextColumn.ElementStyle.Left}">
        <Setter Property="TextAlignment" Value="Right"/>
    </Style>

    <Style x:Key="DataGridTextColumn.ElementStyle.Center" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DataGridTextColumn.ElementStyle.Left}">
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <Style x:Key="DataGridCheckBoxColumn.ElementStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="{StaticResource DataGridTextCell.Margin}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
    </Style>
    
    <Style x:Key="DataGridColumnHeader.Left" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="{StaticResource DataGridColumnHeader.FontSize}"/>
    </Style>
    
    <Style x:Key="DataGridColumnHeader.Center" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="{StaticResource DataGridColumnHeader.FontSize}"/>
    </Style>

    <Style x:Key="DataGridColumnHeader.Right" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="FontSize" Value="{StaticResource DataGridColumnHeader.FontSize}"/>
    </Style>

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="GridLinesVisibility" Value="All"/>
        <Setter Property="HorizontalGridLinesBrush" Value="Gray"/>
        <Setter Property="VerticalGridLinesBrush" Value="Gainsboro"/>
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow" BasedOn="{StaticResource DataGridRow.Style.Default}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell" BasedOn="{StaticResource DataGridCell.Style.Default}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource DataGridColumnHeader.Left}"/>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>